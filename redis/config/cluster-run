#!/bin/bash

# Settings
PORT=6378
TIMEOUT=2000
NODES=4
REPLICAS=3

# You may want to put the above config parameters into config.sh in order to
# override the defaults without modifying this script.

if [ -a config.sh ]
then
    source "config.sh"
fi

# Computed vars
ENDPORT=$((PORT+NODES))

if [ "$1" == "start" ]
then
    while [ $((PORT < ENDPORT)) != "0" ]; do
        PORT=$((PORT+1))
        echo "Starting $PORT"
        if [ ! -a redis.$PORT.conf ]
        then
			echo "port $PORT">>redis.$PORT.conf
			echo "protected-mode no">>redis.$PORT.conf
## 安全模式关闭↑与bind 2选一 全部开启会无提示,无法开启 			
##			echo "bind 127.0.0.1 192.168.16.62 192.168.16.72 192.168.16.75 192.168.16.65">>redis.$PORT.conf
			echo "cluster-enabled yes">>redis.$PORT.conf
			echo "cluster-config-file nodes-${PORT}.conf">>redis.$PORT.conf
			echo "cluster-node-timeout $TIMEOUT">>redis.$PORT.conf
			echo "appendonly yes">>redis.$PORT.conf
			echo "appendfilename appendonly-${PORT}.aof">>redis.$PORT.conf
			echo "dbfilename dump-${PORT}.rdb">>redis.$PORT.conf
			echo "logfile ${PORT}.log">>redis.$PORT.conf
			echo "daemonize yes">>redis.$PORT.conf
        fi
        ../src/redis-server redis.$PORT.conf
    done
    exit 0
fi

if [ "$1" == "create" ]
then
    HOSTS=""
    while [ $((PORT < ENDPORT)) != "0" ]; do
        PORT=$((PORT+1))
        HOSTS="$HOSTS 127.0.0.1:$PORT"
    done
    ../src/redis-trib.rb create --replicas $REPLICAS $HOSTS
    exit 0
fi

if [ "$1" == "stop" ]
then
    while [ $((PORT < ENDPORT)) != "0" ]; do
        PORT=$((PORT+1))
        echo "Stopping $PORT"
        ../src/redis-cli -p $PORT shutdown nosave
    done
    exit 0
fi

if [ "$1" == "watch" ]
then
    PORT=$((PORT+1))
    while [ 1 ]; do
        clear
        date
        ../src/redis-cli -p $PORT cluster nodes | head -30
        sleep 1
    done
    exit 0
fi

if [ "$1" == "tail" ]
then
    INSTANCE=$2
    PORT=$((PORT+INSTANCE))
    tail -f ${PORT}.log
    exit 0
fi

if [ "$1" == "call" ]
then
    while [ $((PORT < ENDPORT)) != "0" ]; do
        PORT=$((PORT+1))
        ../src/redis-cli -p $PORT $2 $3 $4 $5 $6 $7 $8 $9
    done
    exit 0
fi

if [ "$1" == "clean" ]
then
    rm -rf *.log
    rm -rf appendonly*.aof
    rm -rf dump*.rdb
    rm -rf nodes*.conf
    rm -rf redis.*.conf
    exit 0
fi

echo "Usage: $0 [start|create|stop|watch|tail|clean]"
echo "start       -- Launch Redis Cluster instances."
echo "create      -- Create a cluster using redis-trib create."
echo "stop        -- Stop Redis Cluster instances."
echo "watch       -- Show CLUSTER NODES output (first 30 lines) of first node."
echo "tail <id>   -- Run tail -f of instance at base port + ID."
echo "clean       -- Remove all instances data, logs, configs."
