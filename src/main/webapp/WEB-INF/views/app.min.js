var app = angular.module('app', [ 'ngCookies', 'ui.router', 'oc.lazyLoad' ]);
app.run([ '$rootScope', '$state', '$stateParams', '$cookies', function($rootScope, $state, $stateParams, $cookies) {
	$rootScope.$state = $state;
	$rootScope.$stateParams = $stateParams;
	$rootScope.$cookies = $cookies;
} ])
// 初始化 各个主键
.config([ "$provide", "$compileProvider", "$controllerProvider", "$filterProvider", function($provide, $compileProvider, $controllerProvider, $filterProvider) {
	app.controller = $controllerProvider.register;
	app.directive = $compileProvider.directive;
	app.filter = $filterProvider.register;
	app.factory = $provide.factory;
	app.service = $provide.service;
	app.constant = $provide.constant;
} ])
// oclazyload config
.config([ '$ocLazyLoadProvider', function($ocLazyLoadProvider) {
	// We configure ocLazyLoad to use the lib script.js as the async loader
	$ocLazyLoadProvider.config({
		debug : false,
		events : true,
		modules : [ {
			name : 'ui-bootstrap',
			files : [ './public/vendor/angular/angular-bootstrap/ui-bootstrap-tpls-2.2.0.js' ]
		}, {
			name : 'bootstrap.js',
			files : [ './public/js/controllers/bootstrap.js' ]
		} ]
	})
} ])
// 配置路由相应
.config(function($stateProvider, $urlRouterProvider) {
	$urlRouterProvider.otherwise('/access/signin');
	$stateProvider.state('access', {
		url : '/access',
		template : '<div ui-view class="fade-in-right-big smooth"></div>'
	}).state('access.signin', {
		url : '/signin',
		templateUrl : './auth/signin.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ './auth/signin.js' ]);
			} ]
		}
	}).state('access.signout', {
		// abstract: true,
		url : '/signout',
		template : '<h1>Exit User <red>{{app.user.username}}</red></h1>',
		controller : [ '$scope', '$cookies', function($scope, $cookies) {
			$cookies.remove('user');
			location.href = './auth/exit';
		} ]
	}).state('access.signup', {
		url : '/signup',
		templateUrl : './auth/signup.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ './auth/signup.js' ]);
			} ]
		}
	}).state('access.forgotpwd', {
		url : '/forgotpwd',
		templateUrl : './auth/forgotpwd.html'
	}).state('access.lockme', {
		url : '/lockme',
		templateUrl : './auth/lockme.html'
	}).state('access.404', {
		url : '/404',
		templateUrl : './error/404.html'
	}).state('app', {
		abstract : true,
		url : '/app',
		templateUrl : './blocks/index.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'ui-bootstrap', 'bootstrap.js' ]);
			} ]
		}
	}).state('app.index', {
		url : '/index',
		templateUrl : './blocks/tpl/index.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'public/js/controllers/chart.js' ]);
			} ]
		}
	}).state('app.user',{
		url : '/user',
		template : '<div ui-view class="fade-in-right-big smooth"></div>'
	})
	.state('app.user.info',{
		url:'/info',
		templateUrl : './user/info.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'user/info.js' ]);
			} ]
		}
	})

})
// 懒加载 配置
.config([ '$ocLazyLoadProvider', function($ocLazyLoadProvider) {
	// We configure ocLazyLoad to use the lib script.js as the async
	// loader
	$ocLazyLoadProvider.config({
		debug : true,
		events : true
	})
} ])
// 主控制器 实现
.controller('AppCtrl', [ '$scope', '$window', '$cookies', function($scope, $window, $cookies) {
	// add 'ie' classes to html
	var isIE = !!navigator.userAgent.match(/MSIE/i);
	isIE && angular.element($window.document.body).addClass('ie');
	isSmartDevice($window) && angular.element($window.document.body).addClass('smart');
	user = $cookies.getObject('user');
	// config
	$scope.app = {
		name : 'Angulr',
		version : '1.3.3',
		// for chart colors
		color : {
			primary : '#7266ba',
			info : '#23b7e5',
			success : '#27c24c',
			warning : '#fad733',
			danger : '#f05050',
			light : '#e8eff0',
			dark : '#3a3f51',
			black : '#1c2b36'
		},
		settings : {
			themeID : 1,
			navbarHeaderColor : 'bg-black',
			navbarCollapseColor : 'bg-white-only',
			asideColor : 'bg-black',
			headerFixed : true,
			asideFixed : false,
			asideFolded : false,
			asideDock : false,
			container : false
		}
	}
	$scope.app.user=[];
	if(!!user){
		$scope.app.user =user;
	
	}
	
	// angular translate
	$scope.lang = {
		isopen : false
	};
	$scope.langs = {
		en : 'English',
		de_DE : 'German',
		it_IT : 'Italian'
	};
	$scope.selectLang = "English";
	$scope.setLang = function(langKey, $event) {
		// set the current lang
		$scope.selectLang = $scope.langs[langKey];
		// You can change the language during runtime
		$scope.lang.isopen = !$scope.lang.isopen;
	};

	function isSmartDevice($window) {
		// Adapted from
		// http://www.detectmobilebrowsers.com
		var ua = $window['navigator']['userAgent'] || $window['navigator']['vendor'] || $window['opera'];
		// Checks for iOs, Android, Blackberry, Opera
		// Mini, and Windows mobile devices
		return (/iPhone|iPod|iPad|Silk|Android|BlackBerry|Opera Mini|IEMobile/).test(ua);
	}

} ]);