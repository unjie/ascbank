'use strict';
var app = angular.module('app', [ 'ngAnimate', 'ngCookies', 'ngResource', 'ngSanitize', 'ngTouch', 'ngStorage', 'ui.router', 'ui.bootstrap', 'ui.jq', 'oc.lazyLoad', 'pascalprecht.translate' ]);
/*----------------------*/
app.config([ '$controllerProvider', '$compileProvider', '$filterProvider', '$provide', function($controllerProvider, $compileProvider, $filterProvider, $provide) {

	// lazy controller, directive and service
	app.controller = $controllerProvider.register;
	app.directive = $compileProvider.directive;
	app.filter = $filterProvider.register;
	app.factory = $provide.factory;
	app.service = $provide.service;
	app.constant = $provide.constant;
	app.value = $provide.value;
} ]).config([ '$translateProvider', function($translateProvider) {
	// Register a loader for the static files
	// So, the module will search missing translation tables under the specified
	// urls.
	// Those urls are [prefix][langKey][suffix].
	$translateProvider.useStaticFilesLoader({
		prefix : 'public/l10n/',
		suffix : '.js'
	});
	// Tell the module what language to use by default
	$translateProvider.preferredLanguage('en');
	// Tell the module to store the language in the local storage
	$translateProvider.useLocalStorage();
} ])
/*----------------------*/
.constant('JQ_CONFIG', {
	easyPieChart : [ 'public/vendor/jquery/charts/easypiechart/jquery.easy-pie-chart.js' ],
	sparkline : [ 'public/vendor/jquery/charts/sparkline/jquery.sparkline.min.js' ],
	plot : [ 'public/vendor/jquery/charts/flot/jquery.flot.min.js', 'public/vendor/jquery/charts/flot/jquery.flot.resize.js', 'public/vendor/jquery/charts/flot/jquery.flot.tooltip.min.js', 'public/vendor/jquery/charts/flot/jquery.flot.spline.js', 'public/vendor/jquery/charts/flot/jquery.flot.orderBars.js', 'public/vendor/jquery/charts/flot/jquery.flot.pie.min.js' ],
	slimScroll : [ 'public/vendor/jquery/slimscroll/jquery.slimscroll.min.js' ],
	sortable : [ 'public/vendor/jquery/sortable/jquery.sortable.js' ],
	nestable : [ 'public/vendor/jquery/nestable/jquery.nestable.js', 'public/vendor/jquery/nestable/nestable.css' ],
	filestyle : [ 'public/vendor/jquery/file/bootstrap-filestyle.min.js' ],
	slider : [ 'public/vendor/jquery/slider/bootstrap-slider.js', 'public/vendor/jquery/slider/slider.css' ],
	chosen : [ 'public/vendor/jquery/chosen/chosen.jquery.min.js', 'public/vendor/jquery/chosen/chosen.css' ],
	TouchSpin : [ 'public/vendor/jquery/spinner/jquery.bootstrap-touchspin.min.js', 'public/vendor/jquery/spinner/jquery.bootstrap-touchspin.css' ],
	wysiwyg : [ 'public/vendor/jquery/wysiwyg/bootstrap-wysiwyg.js', 'public/vendor/jquery/wysiwyg/jquery.hotkeys.js' ],
	dataTable : [ 'public/vendor/jquery/datatables/jquery.dataTables.min.js', 'public/vendor/jquery/datatables/dataTables.bootstrap.js', 'public/vendor/jquery/datatables/dataTables.bootstrap.css' ],
	vectorMap : [ 'public/vendor/jquery/jvectormap/jquery-jvectormap.min.js', 'public/vendor/jquery/jvectormap/jquery-jvectormap-world-mill-en.js', 'public/vendor/jquery/jvectormap/jquery-jvectormap-us-aea-en.js', 'public/vendor/jquery/jvectormap/jquery-jvectormap.css' ],
	footable : [ 'public/vendor/jquery/footable/footable.all.min.js', 'public/vendor/jquery/footable/footable.core.css' ]
})
// oclazyload config
.config(
		[
				'$ocLazyLoadProvider',
				function($ocLazyLoadProvider) {
					// We configure ocLazyLoad to use the lib script.js as the
					// async loader
					$ocLazyLoadProvider.config({
						debug : false,
						events : true,
						modules : [
								{
									name : 'ngGrid',
									files : [ 'public/vendor/modules/ng-grid/ng-grid.min.js', 'public/vendor/modules/ng-grid/ng-grid.min.css', 'public/vendor/modules/ng-grid/theme.css' ]
								},
								{
									name : 'moment',
									files : [
									// 'public/vendor/angular/angular-moment/moment-with-locales.min.js',
									// 'public/vendor/angular/angular-moment/angular-moment.min.js',
									// 'public/vendor/angular/angular-moment/moment-range.min.js'
									'public/vendor/angular/angular-moment/angular-moment.min.synthesis.js', ]
								},
								{
									name : 'libGantt',
									files : [ 'public/vendor/angular/angular-gantt/dist/angular-gantt.min.css', 'public/vendor/angular/angular-gantt/dist/angular-gantt-plugins.min.css',

									'public/vendor/angular/angular-dragdrop/draganddrop.min.js',

									'public/vendor/libs/css-element-queries/ElementQueries.js', 'public/vendor/libs/css-element-queries/ResizeSensor.js',

									// 'public/vendor/angular/angular-gantt/dist/angular-gantt-plugins.min.js',
									// 'public/vendor/angular/angular-gantt/dist/angular-gantt.min.js'
									'public/vendor/angular/angular-gantt/angular-gantt.syn.js'

									]
								},

								{
									name : 'angular-ui-tree',
									files : [ 'public/vendor/angular/angular-ui-tree/angular-ui-tree.min.css', 'public/vendor/angular/angular-ui-tree/angular-ui-tree.min.js' ]
								},

								{
									name : 'ui.select',
									files : [ 'public/vendor/modules/angular-ui-select/select.min.js', 'public/vendor/modules/angular-ui-select/select.min.css' ]
								},
								{
									name : 'angularFileUpload',
									files : [ 'public/vendor/modules/angular-file-upload/angular-file-upload.min.js' ]
								},
								{
									name : 'ui.calendar',
									files : [ 'public/vendor/modules/angular-ui-calendar/calendar.js' ]
								},
								{
									name : 'ngImgCrop',
									files : [ 'public/vendor/modules/ngImgCrop/ng-img-crop.js', 'public/vendor/modules/ngImgCrop/ng-img-crop.css' ]
								},
								{
									name : 'angularBootstrapNavTree',
									files : [ 'public/vendor/modules/angular-bootstrap-nav-tree/abn_tree_directive.js', 'public/vendor/modules/angular-bootstrap-nav-tree/abn_tree.css' ]
								},
								{
									name : 'toaster',
									files : [ 'public/vendor/modules/angularjs-toaster/toaster.js', 'public/vendor/modules/angularjs-toaster/toaster.css' ]
								},
								{
									name : 'textAngular',
									files : [
									// 'public/vendor/modules/textAngular/textAngular-sanitize.min.js',
									// 'public/vendor/modules/textAngular/textAngular.min.js'
									'//cdn.bootcss.com/textAngular/1.5.12/textAngular.min.css', '//cdn.bootcss.com/textAngular/1.5.12/textAngular-rangy.min.js', '//cdn.bootcss.com/textAngular/1.5.12/textAngular-sanitize.min.js', '//cdn.bootcss.com/textAngular/1.5.12/textAngular.min.js'

									]
								},
								{
									name : 'vr.directives.slider',
									files : [ 'public/vendor/modules/angular-slider/angular-slider.min.js', 'public/vendor/modules/angular-slider/angular-slider.css' ]
								},
								{
									name : 'com.2fdevs.videogular',
									files : [ 'public/vendor/modules/videogular/videogular.min.js' ]
								},
								{
									name : 'com.2fdevs.videogular.plugins.controls',
									files : [ 'public/vendor/modules/videogular/plugins/controls.min.js' ]
								},
								{
									name : 'com.2fdevs.videogular.plugins.buffering',
									files : [ 'public/vendor/modules/videogular/plugins/buffering.min.js' ]
								},
								{
									name : 'com.2fdevs.videogular.plugins.overlayplay',
									files : [ 'public/vendor/modules/videogular/plugins/overlay-play.min.js' ]
								},
								{
									name : 'com.2fdevs.videogular.plugins.poster',
									files : [ 'public/vendor/modules/videogular/plugins/poster.min.js' ]
								},
								{
									name : 'com.2fdevs.videogular.plugins.imaads',
									files : [ 'public/vendor/modules/videogular/plugins/ima-ads.min.js' ]
								},
								{
									name : 'ckeditor',
									files : [ './public/ckeditor/ckeditor.js',
									// './public/vendor/modules/ng-ckeditor/ng-ckeditor.min.js'
									]
								},
								{
									name : 'bootstrapJS',
									files : [ '//cdn.bootcss.com/bootstrap/4.0.0-alpha.4/js/bootstrap.min.js' ]
								},
								{
									name : 'angular-motion',
									files : [ './public/vendor/angular/angular-motion/angular-motion.min.css' ]
								},
								{
									name : 'angular-strap',
									files : [
									// 'public/vendor/angular/angular-strap/dist/angular-strap.min.js',
									// 'public/vendor/angular/angular-strap/dist/angular-strap.tpl.min.js',
									// 'public/vendor/angular/angular-strap/dist/angular-strap.compat.min.js'
									'public/vendor/angular/angular-strap/angular-strap.syn.min.js'

									]
								},
								{
									name : "jsPlumb",
									files : [ '//cdn.bootcss.com/jsPlumb/2.0.7/jsPlumb.min.js' ]
								},
								{
									name : 'filemanager',
									files : [ 'public/vendor/modules/angular-filemanager/angular-filemanager.min.css',
									// '//cdn.bootcss.com/jquery-modal/0.8.0/jquery.modal.min.css',

									// '//cdn.bootcss.com/jquery-modal/0.8.0/jquery.modal.min.js',
									'public/vendor/modules/ng-file-upload/ng-file-upload.min.js', 'public/vendor/modules/angular-filemanager/angular-filemanager.min.js', '//cdn.bootcss.com/tether/1.3.7/js/tether.min.js' ]
								},
								{
									name : 'froalaEditor',
									files : [ 'public/froala_editor_2.3.4/css/froala_editor.min.css', 'public/froala_editor_2.3.4/css/froala_style.min.css', 'public/froala_editor_2.3.4/css/plugins/char_counter.css', 'public/froala_editor_2.3.4/css/plugins/code_view.css', 'public/froala_editor_2.3.4/css/plugins/colors.css', 'public/froala_editor_2.3.4/css/plugins/emoticons.css', 'public/froala_editor_2.3.4/css/plugins/file.css', 'public/froala_editor_2.3.4/css/plugins/fullscreen.css', 'public/froala_editor_2.3.4/css/plugins/image_manager.css', 'public/froala_editor_2.3.4/css/plugins/image.css', 'public/froala_editor_2.3.4/css/plugins/line_breaker.css', 'public/froala_editor_2.3.4/css/plugins/table.css', 'public/froala_editor_2.3.4/css/plugins/video.css',

									'public/froala_editor_2.3.4/js/froala_editor.min.js',

									'public/froala_editor_2.3.4/js/plugins/align.min.js', 'public/froala_editor_2.3.4/js/plugins/char_counter.min.js', 'public/froala_editor_2.3.4/js/plugins/code_beautifier.min.js', 'public/froala_editor_2.3.4/js/plugins/code_view.min.js', 'public/froala_editor_2.3.4/js/plugins/colors.min.js', 'public/froala_editor_2.3.4/js/plugins/emoticons.min.js', 'public/froala_editor_2.3.4/js/plugins/entities.min.js', 'public/froala_editor_2.3.4/js/plugins/file.min.js', 'public/froala_editor_2.3.4/js/plugins/font_family.min.js', 'public/froala_editor_2.3.4/js/plugins/font_size.min.js', 'public/froala_editor_2.3.4/js/plugins/fullscreen.min.js', 'public/froala_editor_2.3.4/js/plugins/image.min.js', 'public/froala_editor_2.3.4/js/plugins/image_manager.min.js', 'public/froala_editor_2.3.4/js/plugins/inline_style.min.js', 'public/froala_editor_2.3.4/js/plugins/line_breaker.min.js', 'public/froala_editor_2.3.4/js/plugins/link.min.js',
											'public/froala_editor_2.3.4/js/plugins/lists.min.js', 'public/froala_editor_2.3.4/js/plugins/paragraph_format.min.js', 'public/froala_editor_2.3.4/js/plugins/paragraph_style.min.js', 'public/froala_editor_2.3.4/js/plugins/quote.min.js', 'public/froala_editor_2.3.4/js/plugins/save.min.js', 'public/froala_editor_2.3.4/js/plugins/table.min.js', 'public/froala_editor_2.3.4/js/plugins/video.min.js',

											'public/vendor/modules/angular-froala/angular-froala.js'

									]
								}

						]
					});
				} ])
/*----------------------*/
.run([ '$rootScope', '$state', '$stateParams', function($rootScope, $state, $stateParams) {
	$rootScope.$state = $state;
	$rootScope.$stateParams = $stateParams;
} ]).config([ '$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {
	$urlRouterProvider.otherwise('/app/dashboard-v1');
	$stateProvider.state('app', {
		abstract : true,
		url : '/app',
		templateUrl : 'manage/tpl/app.html'
	}).state('app.dashboard-v1', {
		url : '/dashboard-v1',
		templateUrl : 'manage/tpl/app_dashboard_v1.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'public/js/controllers/chart.js' ]);
			} ]
		}
	}).state('app.dashboard-v2', {
		url : '/dashboard-v2',
		templateUrl : 'manage/tpl/app_dashboard_v2.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'public/js/controllers/chart.js' ]);
			} ]
		}
	})

	// users manage
	.state('app.user', {
		url : '/user',
		template : '<div ui-view class="fade-in-up"></div>',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {// 'angular-strap','angular-motion','./public/css/bootstrap-additions/bootstrap-additions.min.css'
				return $ocLazyLoad.load([ 'ngGrid' ]);
			} ]
		}
	}).state('app.user.users', {
		url : '/users',
		templateUrl : './manage/tpl/user/users.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ './manage/tpl/user/users.js' ]);
			} ]
		}
	}).state('app.user.roles', {
		url : '/roles',
		templateUrl : './manage/tpl/user/roles.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('./manage/tpl/user/roles.js');
			} ]
		}
	}).state('app.user.permissions', {
		url : '/permissions',
		templateUrl : './manage/tpl/user/permissions.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('./manage/tpl/user/permissions.js');
			} ]
		}
	})

	// <link href="//cdn.bootcss.com/angular-gantt/1.2.11/angular-gantt.min.css"
	// rel="stylesheet">
	.state('app.gantt', {
		url : '/gantt',
		templateUrl : "./manage/tpl/gantt/index.html",
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {// 'angular-strap',
				return $ocLazyLoad.load([ 'moment', 'angular-ui-tree', 'libGantt', 'jsPlumb' ]).then(function() {
					return $ocLazyLoad.load('./manage/tpl/gantt/ProjectCtrl.js');
				});
			} ]
		}
	})

	.state('app.conent', {
		url : '/conent',
		template : '<div ui-view class="fade-in-up"></div>',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('ngGrid');
			} ]
		}
	}).state('app.conent.menu', {
		url : '/menu',
		templateUrl : './manage/tpl/conent/menu.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {// 'angular-strap','angular-motion','./public/css/bootstrap-additions/bootstrap-additions.min.css'
				return $ocLazyLoad.load([ 'angular-ui-tree', 'froalaEditor' ]).then(function() {
					return $ocLazyLoad.load('./manage/tpl/conent/menu.js');
				});
			} ]
		}
	}).state('app.conent.article', {
		url : '/article',
		templateUrl : './manage/tpl/conent/article.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('froalaEditor').then(function() {
					return $ocLazyLoad.load([ './manage/tpl/conent/article.js' ]);
				});
			} ]
		}
	})

	.state('app.file', {
		url : '/file',
		template : '<angular-filemanager ng-init="app.settings.asideFolded = true; app.settings.asideDock = true; "></angular-filemanager>',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'filemanager', 'bootstrapJS' ]).then(function() {
					return $ocLazyLoad.load([ './manage/tpl/file/filemanager.js' ]);
				});
			} ]
		}
	})

	.state('app.ui', {
		url : '/ui',
		template : '<div ui-view class="fade-in-up"></div>'
	}).state('app.ui.buttons', {
		url : '/buttons',
		templateUrl : 'manage/tpl/ui_buttons.html'
	}).state('app.ui.icons', {
		url : '/icons',
		templateUrl : 'manage/tpl/ui_icons.html'
	}).state('app.ui.grid', {
		url : '/grid',
		templateUrl : 'manage/tpl/ui_grid.html'
	}).state('app.ui.widgets', {
		url : '/widgets',
		templateUrl : 'manage/tpl/ui_widgets.html'
	}).state('app.ui.bootstrap', {
		url : '/bootstrap',
		templateUrl : 'manage/tpl/ui_bootstrap.html'
	}).state('app.ui.sortable', {
		url : '/sortable',
		templateUrl : 'manage/tpl/ui_sortable.html'
	}).state('app.ui.portlet', {
		url : '/portlet',
		templateUrl : 'manage/tpl/ui_portlet.html'
	}).state('app.ui.timeline', {
		url : '/timeline',
		templateUrl : 'manage/tpl/ui_timeline.html'
	}).state('app.ui.tree', {
		url : '/tree',
		templateUrl : 'manage/tpl/ui_tree.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('angularBootstrapNavTree').then(function() {
					return $ocLazyLoad.load('public/js/controllers/tree.js');
				});
			} ]
		}
	}).state('app.ui.toaster', {
		url : '/toaster',
		templateUrl : 'manage/tpl/ui_toaster.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('toaster').then(function() {
					return $ocLazyLoad.load('public/js/controllers/toaster.js');
				});
			} ]
		}
	}).state('app.ui.jvectormap', {
		url : '/jvectormap',
		templateUrl : 'manage/tpl/ui_jvectormap.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('public/js/controllers/vectormap.js');
			} ]
		}
	}).state('app.ui.googlemap', {
		url : '/googlemap',
		templateUrl : 'manage/tpl/ui_googlemap.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'public/js/app/map/load-google-maps.js', 'public/js/app/map/ui-map.js', 'public/js/app/map/map.js' ]).then(function() {
					return loadGoogleMaps();
				});
			} ]
		}
	}).state('app.chart', {
		url : '/chart',
		templateUrl : 'manage/tpl/ui_chart.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('public/js/controllers/chart.js');
			} ]
		}
	})
	// table
	.state('app.table', {
		url : '/table',
		template : '<div ui-view></div>'
	}).state('app.table.static', {
		url : '/static',
		templateUrl : 'manage/tpl/table_static.html'
	}).state('app.table.datatable', {
		url : '/datatable',
		templateUrl : 'manage/tpl/table_datatable.html'
	}).state('app.table.footable', {
		url : '/footable',
		templateUrl : 'manage/tpl/table_footable.html'
	}).state('app.table.grid', {
		url : '/grid',
		templateUrl : 'manage/tpl/table_grid.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('ngGrid').then(function() {
					return $ocLazyLoad.load('public/js/controllers/grid.js');
				});
			} ]
		}
	})
	// form
	.state('app.form', {
		url : '/form',
		template : '<div ui-view class="fade-in"></div>',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('public/js/controllers/form.js');
			} ]
		}
	}).state('app.form.elements', {
		url : '/elements',
		templateUrl : 'manage/tpl/form_elements.html'
	}).state('app.form.validation', {
		url : '/validation',
		templateUrl : 'manage/tpl/form_validation.html'
	}).state('app.form.wizard', {
		url : '/wizard',
		templateUrl : 'manage/tpl/form_wizard.html'
	}).state('app.form.fileupload', {
		url : '/fileupload',
		templateUrl : 'manage/tpl/form_fileupload.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('angularFileUpload').then(function() {
					return $ocLazyLoad.load('public/js/controllers/file-upload.js');
				});
			} ]
		}
	}).state('app.form.imagecrop', {
		url : '/imagecrop',
		templateUrl : 'manage/tpl/form_imagecrop.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('ngImgCrop').then(function() {
					return $ocLazyLoad.load('public/js/controllers/imgcrop.js');
				});
			} ]
		}
	}).state('app.form.select', {
		url : '/select',
		templateUrl : 'manage/tpl/form_select.html',
		controller : 'SelectCtrl',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('ui.select').then(function() {
					return $ocLazyLoad.load('public/js/controllers/select.js');
				});
			} ]
		}
	}).state('app.form.slider', {
		url : '/slider',
		templateUrl : 'manage/tpl/form_slider.html',
		controller : 'SliderCtrl',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('vr.directives.slider').then(function() {
					return $ocLazyLoad.load('public/js/controllers/slider.js');
				});
			} ]
		}
	}).state('app.form.editor', {
		url : '/editor',
		templateUrl : 'manage/tpl/form_editor.html',
		controller : 'EditorCtrl',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load('textAngular').then(function() {
					return $ocLazyLoad.load('public/js/controllers/editor.js');
				});
			} ]
		}
	})
	// pages
	.state('app.page', {
		url : '/page',
		template : '<div ui-view class="fade-in-down"></div>'
	}).state('app.page.profile', {
		url : '/profile',
		templateUrl : 'manage/tpl/page_profile.html'
	}).state('app.page.post', {
		url : '/post',
		templateUrl : 'manage/tpl/page_post.html'
	}).state('app.page.search', {
		url : '/search',
		templateUrl : 'manage/tpl/page_search.html'
	}).state('app.page.invoice', {
		url : '/invoice',
		templateUrl : 'manage/tpl/page_invoice.html'
	}).state('app.page.price', {
		url : '/price',
		templateUrl : 'manage/tpl/page_price.html'
	}).state('app.docs', {
		url : '/docs',
		templateUrl : 'manage/tpl/docs.html'
	})
	// others
	.state('lockme', {
		url : '/lockme',
		templateUrl : 'manage/tpl/page_lockme.html'
	})

	.state('access', {
		url : '/access',
		template : '<div ui-view class="fade-in-right-big smooth"></div>'
	}).state('access.signin', {
		url : '/signin',
		templateUrl : 'manage/tpl/page_signin.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'public/js/controllers/signin.js' ]);
			} ]
		}
	}).state('access.signup', {
		url : '/signup',
		templateUrl : 'manage/tpl/page_signup.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'public/js/controllers/signup.js' ]);
			} ]
		}
	}).state('access.forgotpwd', {
		url : '/forgotpwd',
		templateUrl : 'manage/tpl/page_forgotpwd.html'
	}).state('access.404', {
		url : '/404',
		templateUrl : 'manage/tpl/page_404.html'
	})

	// fullCalendar
	.state('app.calendar', {
		url : '/calendar',
		templateUrl : 'manage/tpl/app_calendar.html',
		// use resolve to load other dependences
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'public/vendor/jquery/fullcalendar/fullcalendar.css', 'public/vendor/jquery/fullcalendar/theme.css',
				// 'moment',
				'public/vendor/angular/angular-moment/moment.min.js', 'public/vendor/jquery/jquery-ui-1.10.3.custom.min.js', 'public/vendor/jquery/fullcalendar/fullcalendar.min.js', 'public/js/app/calendar/calendar.js' ]).then(function() {
					return $ocLazyLoad.load('ui.calendar');
				})
			} ]
		}
	})

	// mail
	.state('app.mail', {
		abstract : true,
		url : '/mail',
		templateUrl : 'manage/tpl/mail.html',
		// use resolve to load other dependences
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'public/js/app/mail/mail.js', 'public/js/app/mail/mail-service.js', 'public/vendor/angular/angular-moment/moment.min.js' ]);
			} ]
		}
	}).state('app.mail.list', {
		url : '/inbox/{fold}',
		templateUrl : 'manage/tpl/mail.list.html'
	}).state('app.mail.detail', {
		url : '/{mailId:[0-9]{1,4}}',
		templateUrl : 'manage/tpl/mail.detail.html'
	}).state('app.mail.compose', {
		url : '/compose',
		templateUrl : 'manage/tpl/mail.new.html'
	})

	.state('layout', {
		abstract : true,
		url : '/layout',
		templateUrl : 'manage/tpl/layout.html'
	}).state('layout.fullwidth', {
		url : '/fullwidth',
		views : {
			'' : {
				templateUrl : 'manage/tpl/layout_fullwidth.html'
			},
			'footer' : {
				templateUrl : 'manage/tpl/layout_footer_fullwidth.html'
			}
		},
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'public/js/controllers/vectormap.js' ]);
			} ]
		}
	}).state('layout.mobile', {
		url : '/mobile',
		views : {
			'' : {
				templateUrl : 'manage/tpl/layout_mobile.html'
			},
			'footer' : {
				templateUrl : 'manage/tpl/layout_footer_mobile.html'
			}
		}
	}).state('layout.app', {
		url : '/app',
		views : {
			'' : {
				templateUrl : 'manage/tpl/layout_app.html'
			},
			'footer' : {
				templateUrl : 'manage/tpl/layout_footer_fullwidth.html'
			}
		},
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'public/js/controllers/tab.js' ]);
			} ]
		}
	}).state('apps', {
		abstract : true,
		url : '/apps',
		templateUrl : 'manage/tpl/layout.html'
	}).state('apps.note', {
		url : '/note',
		templateUrl : 'manage/tpl/apps_note.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'public/js/app/note/note.js', 'public/vendor/angular/angular-moment/moment.min.js' ]);
			} ]
		}
	}).state('apps.contact', {
		url : '/contact',
		templateUrl : 'manage/tpl/apps_contact.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'public/js/app/contact/contact.js' ]);
			} ]
		}
	}).state('app.weather', {
		url : '/weather',
		templateUrl : 'manage/tpl/apps_weather.html',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load({
					name : 'angular-skycons',
					files : [ 'public/js/app/weather/skycons.js', 'public/vendor/angular/angular-moment/moment.min.js', 'public/js/app/weather/angular-skycons.js', 'public/js/app/weather/ctrl.js' ]
				});
			} ]
		}
	}).state('music', {
		url : '/music',
		templateUrl : 'manage/tpl/music.html',
		controller : 'MusicCtrl',
		resolve : {
			deps : [ '$ocLazyLoad', function($ocLazyLoad) {
				return $ocLazyLoad.load([ 'com.2fdevs.videogular', 'com.2fdevs.videogular.plugins.controls', 'com.2fdevs.videogular.plugins.overlayplay', 'com.2fdevs.videogular.plugins.poster', 'com.2fdevs.videogular.plugins.buffering', 'public/js/app/music/ctrl.js', 'public/js/app/music/theme.css' ]);
			} ]
		}
	}).state('music.home', {
		url : '/home',
		templateUrl : 'manage/tpl/music.home.html'
	}).state('music.genres', {
		url : '/genres',
		templateUrl : 'manage/tpl/music.genres.html'
	}).state('music.detail', {
		url : '/detail',
		templateUrl : 'manage/tpl/music.detail.html'
	}).state('music.mtv', {
		url : '/mtv',
		templateUrl : 'manage/tpl/music.mtv.html'
	}).state('music.mtvdetail', {
		url : '/mtvdetail',
		templateUrl : 'manage/tpl/music.mtv.detail.html'
	}).state('music.playlist', {
		url : '/playlist/{fold}',
		templateUrl : 'manage/tpl/music.playlist.html'
	})
} ])
/*----------------------*/
.controller('AppCtrl', [ '$scope', '$translate', '$localStorage', '$window', function($scope, $translate, $localStorage, $window) {
	// add 'ie' classes to html
	var isIE = !!navigator.userAgent.match(/MSIE/i);
	isIE && angular.element($window.document.body).addClass('ie');
	isSmartDevice($window) && angular.element($window.document.body).addClass('smart');

	// config
	$scope.app = {
		name : 'Angulr',
		version : '1.3.3',
		// for chart colors
		color : {
			primary : '#7266ba',
			info : '#23b7e5',
			success : '#27c24c',
			warning : '#fad733',
			danger : '#f05050',
			light : '#e8eff0',
			dark : '#3a3f51',
			black : '#1c2b36'
		},
		settings : {
			themeID : 1,
			navbarHeaderColor : 'bg-black',
			navbarCollapseColor : 'bg-white-only',
			asideColor : 'bg-black',
			headerFixed : true,
			asideFixed : false,
			asideFolded : false,
			asideDock : false,
			container : false
		}
	}

	// save settings to local storage
	if (angular.isDefined($localStorage.settings)) {
		$scope.app.settings = $localStorage.settings;
	} else {
		$localStorage.settings = $scope.app.settings;
	}
	$scope.$watch('app.settings', function() {
		if ($scope.app.settings.asideDock && $scope.app.settings.asideFixed) {
			// aside dock and fixed must set the header fixed.
			$scope.app.settings.headerFixed = true;
		}
		// save to local storage
		$localStorage.settings = $scope.app.settings;
	}, true);

	// angular translate
	$scope.lang = {
		isopen : false
	};
	$scope.langs = {
		en : 'English',
		de_DE : 'German',
		it_IT : 'Italian'
	};
	$scope.selectLang = $scope.langs[$translate.proposedLanguage()] || "English";
	$scope.setLang = function(langKey, $event) {
		// set the current lang
		$scope.selectLang = $scope.langs[langKey];
		// You can change the language during runtime
		$translate.use(langKey);
		$scope.lang.isopen = !$scope.lang.isopen;
	};

	function isSmartDevice($window) {
		// Adapted from http://www.detectmobilebrowsers.com
		var ua = $window['navigator']['userAgent'] || $window['navigator']['vendor'] || $window['opera'];
		// Checks for iOs, Android, Blackberry, Opera Mini, and Windows mobile
		// devices
		return (/iPhone|iPod|iPad|Silk|Android|BlackBerry|Opera Mini|IEMobile/).test(ua);
	}

} ])

/* Filters */
// script src="./public/js/filters/fromNow.js"/>
// need load the moment.js to use this filter.
.filter('fromNow', function() {
	return function(date) {
		return moment(date).fromNow();
	}
})
// script src="./public/js/directives/setnganimate.js"/>
.directive('setNgAnimate', [ '$animate', function($animate) {
	return {
		link : function($scope, $element, $attrs) {
			$scope.$watch(function() {
				return $scope.$eval($attrs.setNgAnimate, $scope);
			}, function(valnew, valold) {
				$animate.enabled(!!valnew, $element);
			});
		}
	};
} ])
// script src="./public/js/directives/ui-butterbar.js"/>
.directive('uiButterbar', [ '$rootScope', '$anchorScroll', function($rootScope, $anchorScroll) {
	return {
		restrict : 'AC',
		template : '<span class="bar"></span>',
		link : function(scope, el, attrs) {
			el.addClass('butterbar hide');
			scope.$on('$stateChangeStart', function(event) {
				$anchorScroll();
				el.removeClass('hide').addClass('active');
			});
			scope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState) {
				event.targetScope.$watch('$viewContentLoaded', function() {
					el.addClass('hide').removeClass('active');
				})
			});
		}
	};
} ])
// script src="./public/js/directives/ui-focus.js"/>
.directive('uiFocus', function($timeout, $parse) {
	return {
		link : function(scope, element, attr) {
			var model = $parse(attr.uiFocus);
			scope.$watch(model, function(value) {
				if (value === true) {
					$timeout(function() {
						element[0].focus();
					});
				}
			});
			element.bind('blur', function() {
				scope.$apply(model.assign(scope, false));
			});
		}
	};
})

// script src="./public/js/directives/ui-fullscreen.js"/>
.directive('uiFullscreen', [ '$ocLazyLoad', '$document', '$window', function($ocLazyLoad, $document, $window) {
	return {
		restrict : 'AC',
		template : '<i class="fa fa-expand fa-fw text"></i><i class="fa fa-compress fa-fw text-active"></i>',
		link : function(scope, el, attr) {
			el.addClass('hide');
			$ocLazyLoad.load('public/vendor/libs/screenfull.min.js').then(function() {
				// disable on ie11
				if (screenfull.enabled && !navigator.userAgent.match(/Trident.*rv:11\./)) {
					el.removeClass('hide');
				}
				el.on('click', function() {
					var target;
					attr.target && (target = $(attr.target)[0]);
					screenfull.toggle(target);
				});
				$document.on(screenfull.raw.fullscreenchange, function() {
					if (screenfull.isFullscreen) {
						el.addClass('active');
					} else {
						el.removeClass('active');
					}
				});
			});
		}
	};
} ])
// script src="./public/js/directives/ui-jq.js"/>

// script src="./public/js/directives/ui-module.js"/>
.directive('uiModule', [ 'MODULE_CONFIG', '$ocLazyLoad', '$compile', function(MODULE_CONFIG, $ocLazyLoad, $compile) {
	return {
		restrict : 'A',
		compile : function(el, attrs) {
			var contents = el.contents().clone();
			return function(scope, el, attrs) {
				el.contents().remove();
				$ocLazyLoad.load(MODULE_CONFIG[attrs.uiModule]).then(function() {
					$compile(contents)(scope, function(clonedElement, scope) {
						el.append(clonedElement);
					});
				});
			}
		}
	};
} ])
// script src="./public/js/directives/ui-nav.js"/>
.directive('uiNav', [ '$timeout', function($timeout) {
	return {
		restrict : 'AC',
		link : function(scope, el, attr) {
			var _window = $(window), _mb = 768, wrap = $('.app-aside'), next, backdrop = '.dropdown-backdrop';
			// unfolded
			el.on('click', 'a', function(e) {
				next && next.trigger('mouseleave.nav');
				var _this = $(this);
				_this.parent().siblings(".active").toggleClass('active');
				_this.next().is('ul') && _this.parent().toggleClass('active') && e.preventDefault();
				// mobile
				_this.next().is('ul') || ((_window.width() < _mb) && $('.app-aside').removeClass('show off-screen'));
			});

			// folded & fixed
			el.on('mouseenter', 'a', function(e) {
				next && next.trigger('mouseleave.nav');
				$('> .nav', wrap).remove();
				if (!$('.app-aside-fixed.app-aside-folded').length || (_window.width() < _mb) || $('.app-aside-dock').length)
					return;
				var _this = $(e.target), top, w_h = $(window).height(), offset = 50, min = 150;

				!_this.is('a') && (_this = _this.closest('a'));
				if (_this.next().is('ul')) {
					next = _this.next();
				} else {
					return;
				}

				_this.parent().addClass('active');
				top = _this.parent().position().top + offset;
				next.css('top', top);
				if (top + next.height() > w_h) {
					next.css('bottom', 0);
				}
				if (top + min > w_h) {
					next.css('bottom', w_h - top - offset).css('top', 'auto');
				}
				next.appendTo(wrap);

				next.on('mouseleave.nav', function(e) {
					$(backdrop).remove();
					next.appendTo(_this.parent());
					next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');
					_this.parent().removeClass('active');
				});

				$('.smart').length && $('<div class="dropdown-backdrop"/>').insertAfter('.app-aside').on('click', function(next) {
					next && next.trigger('mouseleave.nav');
				});

			});

			wrap.on('mouseleave', function(e) {
				next && next.trigger('mouseleave.nav');
				$('> .nav', wrap).remove();
			});
		}
	};
} ])
// script src="./public/js/directives/ui-scroll.js"/>
.directive('uiScroll', [ '$location', '$anchorScroll', function($location, $anchorScroll) {
	return {
		restrict : 'AC',
		link : function(scope, el, attr) {
			el.on('click', function(e) {
				$location.hash(attr.uiScroll);
				$anchorScroll();
			});
		}
	};
} ])
// script src="./public/js/directives/ui-shift.js"/>
.directive('uiShift', [ '$timeout', function($timeout) {
	return {
		restrict : 'A',
		link : function(scope, el, attr) {
			// get the $prev or $parent of this el
			var _el = $(el), _window = $(window), prev = _el.prev(), parent, width = _window.width();

			!prev.length && (parent = _el.parent());

			function sm() {
				$timeout(function() {
					var method = attr.uiShift;
					var target = attr.target;
					_el.hasClass('in') || _el[method](target).addClass('in');
				});
			}

			function md() {
				parent && parent['prepend'](el);
				!parent && _el['insertAfter'](prev);
				_el.removeClass('in');
			}

			(width < 768 && sm()) || md();

			_window.resize(function() {
				if (width !== _window.width()) {
					$timeout(function() {
						(_window.width() < 768 && sm()) || md();
						width = _window.width();
					});
				}
			});
		}
	};
} ])
// script src="./public/js/directives/ui-toggleclass.js"/>
.directive('uiToggleClass', [ '$timeout', '$document', function($timeout, $document) {
	return {
		restrict : 'AC',
		link : function(scope, el, attr) {
			el.on('click', function(e) {
				e.preventDefault();
				var classes = attr.uiToggleClass.split(','), targets = (attr.target && attr.target.split(',')) || Array(el), key = 0;
				angular.forEach(classes, function(_class) {
					var target = targets[(targets.length && key)];
					(_class.indexOf('*') !== -1) && magic(_class, target);
					$(target).toggleClass(_class);
					key++;
				});
				$(el).toggleClass('active');

				function magic(_class, target) {
					var patt = new RegExp('\\s' + _class.replace(/\*/g, '[A-Za-z0-9-_]+').split(' ').join('\\s|\\s') + '\\s', 'g');
					var cn = ' ' + $(target)[0].className + ' ';
					while (patt.test(cn)) {
						cn = cn.replace(patt, ' ');
					}
					$(target)[0].className = $.trim(cn);
				}
			});
		}
	};
} ])
// script src="./public/js/directives/ui-validate.js"/>

// script src="./public/js/controllers/bootstrap.js"/>
.controller('AccordionDemoCtrl', [ '$scope', function($scope) {
	$scope.oneAtATime = true;

	$scope.groups = [ {
		title : 'Accordion group header - #1',
		content : 'Dynamic group body - #1'
	}, {
		title : 'Accordion group header - #2',
		content : 'Dynamic group body - #2'
	} ];

	$scope.items = [ 'Item 1', 'Item 2', 'Item 3' ];

	$scope.addItem = function() {
		var newItemNo = $scope.items.length + 1;
		$scope.items.push('Item ' + newItemNo);
	};

	$scope.status = {
		isFirstOpen : true,
		isFirstDisabled : false
	};
} ])

.controller('AlertDemoCtrl', [ '$scope', function($scope) {
	$scope.alerts = [ {
		type : 'success',
		msg : 'Well done! You successfully read this important alert message.'
	}, {
		type : 'info',
		msg : 'Heads up! This alert needs your attention, but it is not super important.'
	}, {
		type : 'warning',
		msg : 'Warning! Best check yo self, you are not looking too good...'
	} ];

	$scope.addAlert = function() {
		$scope.alerts.push({
			type : 'danger',
			msg : 'Oh snap! Change a few things up and try submitting again.'
		});
	};

	$scope.closeAlert = function(index) {
		$scope.alerts.splice(index, 1);
	};
} ])

.controller('ButtonsDemoCtrl', [ '$scope', function($scope) {
	$scope.singleModel = 1;

	$scope.radioModel = 'Middle';

	$scope.checkModel = {
		left : false,
		middle : true,
		right : false
	};
} ])

.controller('CarouselDemoCtrl', [ '$scope', function($scope) {
	$scope.myInterval = 5000;
	var slides = $scope.slides = [];
	$scope.addSlide = function() {
		slides.push({
			image : 'img/c' + slides.length + '.jpg',
			text : [ 'Carousel text #0', 'Carousel text #1', 'Carousel text #2', 'Carousel text #3' ][slides.length % 4]
		});
	};
	for (var i = 0; i < 4; i++) {
		$scope.addSlide();
	}
} ])

.controller('DropdownDemoCtrl', [ '$scope', function($scope) {
	$scope.items = [ 'The first choice!', 'And another choice for you.', 'but wait! A third!' ];

	$scope.status = {
		isopen : false
	};

	$scope.toggled = function(open) {
		// console.log('Dropdown is now: ', open);
	};

	$scope.toggleDropdown = function($event) {
		$event.preventDefault();
		$event.stopPropagation();
		$scope.status.isopen = !$scope.status.isopen;
	};
} ])

.controller('ModalInstanceCtrl', [ '$scope', '$modalInstance', 'items', function($scope, $modalInstance, items) {
	$scope.items = items;
	$scope.selected = {
		item : $scope.items[0]
	};

	$scope.ok = function() {
		$modalInstance.close($scope.selected.item);
	};

	$scope.cancel = function() {
		$modalInstance.dismiss('cancel');
	};
} ])

.controller('ModalDemoCtrl', [ '$scope', '$modal', '$log', function($scope, $modal, $log) {
	$scope.items = [ 'item1', 'item2', 'item3' ];
	$scope.open = function(size) {
		var modalInstance = $modal.open({
			templateUrl : 'myModalContent.html',
			controller : 'ModalInstanceCtrl',
			size : size,
			resolve : {
				items : function() {
					return $scope.items;
				}
			}
		});

		modalInstance.result.then(function(selectedItem) {
			$scope.selected = selectedItem;
		}, function() {
			$log.info('Modal dismissed at: ' + new Date());
		});
	};
} ])

.controller('PaginationDemoCtrl', [ '$scope', '$log', function($scope, $log) {
	$scope.totalItems = 64;
	$scope.currentPage = 4;

	$scope.setPage = function(pageNo) {
		$scope.currentPage = pageNo;
	};

	$scope.pageChanged = function() {
		$log.info('Page changed to: ' + $scope.currentPage);
	};

	$scope.maxSize = 5;
	$scope.bigTotalItems = 175;
	$scope.bigCurrentPage = 1;
} ])

.controller('PopoverDemoCtrl', [ '$scope', function($scope) {
	$scope.dynamicPopover = 'Hello, World!';
	$scope.dynamicPopoverTitle = 'Title';
} ])

.controller('ProgressDemoCtrl', [ '$scope', function($scope) {
	$scope.max = 200;

	$scope.random = function() {
		var value = Math.floor((Math.random() * 100) + 1);
		var type;

		if (value < 25) {
			type = 'success';
		} else if (value < 50) {
			type = 'info';
		} else if (value < 75) {
			type = 'warning';
		} else {
			type = 'danger';
		}

		$scope.showWarning = (type === 'danger' || type === 'warning');

		$scope.dynamic = value;
		$scope.type = type;
	};
	$scope.random();

	$scope.randomStacked = function() {
		$scope.stacked = [];
		var types = [ 'success', 'info', 'warning', 'danger' ];

		for (var i = 0, n = Math.floor((Math.random() * 4) + 1); i < n; i++) {
			var index = Math.floor((Math.random() * 4));
			$scope.stacked.push({
				value : Math.floor((Math.random() * 30) + 1),
				type : types[index]
			});
		}
	};
	$scope.randomStacked();
} ])

.controller('TabsDemoCtrl', [ '$scope', function($scope) {
	$scope.tabs = [ {
		title : 'Dynamic Title 1',
		content : 'Dynamic content 1'
	}, {
		title : 'Dynamic Title 2',
		content : 'Dynamic content 2',
		disabled : true
	} ];
} ])

.controller('RatingDemoCtrl', [ '$scope', function($scope) {
	$scope.rate = 7;
	$scope.max = 10;
	$scope.isReadonly = false;

	$scope.hoveringOver = function(value) {
		$scope.overStar = value;
		$scope.percent = 100 * (value / $scope.max);
	};
} ])

.controller('TooltipDemoCtrl', [ '$scope', function($scope) {
	$scope.dynamicTooltip = 'Hello, World!';
	$scope.dynamicTooltipText = 'dynamic';
	$scope.htmlTooltip = 'I\'ve been made <b>bold</b>!';
} ])

.controller('TypeaheadDemoCtrl', [ '$scope', '$http', function($scope, $http) {
	$scope.selected = undefined;
	$scope.states = [ 'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming' ];
	// Any function returning a promise object can be used to load values
	// asynchronously
	$scope.getLocation = function(val) {
		return $http.get('http://maps.googleapis.com/maps/api/geocode/json', {
			params : {
				address : val,
				sensor : false
			}
		}).then(function(res) {
			var addresses = [];
			angular.forEach(res.data.results, function(item) {
				addresses.push(item.formatted_address);
			});
			return addresses;
		});
	};
} ])

.controller('DatepickerDemoCtrl', [ '$scope', function($scope) {
	$scope.today = function() {
		$scope.dt = new Date();
	};
	$scope.today();

	$scope.clear = function() {
		$scope.dt = null;
	};

	// Disable weekend selection
	$scope.disabled = function(date, mode) {
		return (mode === 'day' && (date.getDay() === 0 || date.getDay() === 6));
	};

	$scope.toggleMin = function() {
		$scope.minDate = $scope.minDate ? null : new Date();
	};
	$scope.toggleMin();

	$scope.open = function($event) {
		$event.preventDefault();
		$event.stopPropagation();

		$scope.opened = true;
	};

	$scope.dateOptions = {
		formatYear : 'yy',
		startingDay : 1,
		class : 'datepicker'
	};

	$scope.initDate = new Date('2016-15-20');
	$scope.formats = [ 'dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate' ];
	$scope.format = $scope.formats[0];
} ])

.controller('TimepickerDemoCtrl', [ '$scope', function($scope) {
	$scope.mytime = new Date();

	$scope.hstep = 1;
	$scope.mstep = 15;

	$scope.options = {
		hstep : [ 1, 2, 3 ],
		mstep : [ 1, 5, 10, 15, 25, 30 ]
	};

	$scope.ismeridian = true;
	$scope.toggleMode = function() {
		$scope.ismeridian = !$scope.ismeridian;
	};

	$scope.update = function() {
		var d = new Date();
		d.setHours(14);
		d.setMinutes(0);
		$scope.mytime = d;
	};

	$scope.changed = function() {
		// console.log('Time changed to: ' + $scope.mytime);
	};

	$scope.clear = function() {
		$scope.mytime = null;
	};
} ]);
