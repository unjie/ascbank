<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.ascbank</groupId>
	<artifactId>ascbank</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>ascbank</name>
	<description>ascbank</description>
	<url>http://localhost:3000/unjie/ascbank.git</url>


	<!-- <parent> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-parent</artifactId> <version>1.4.0.RELEASE</version> <relativePath /> lookup parent from repository </parent> -->

	<properties>
		<hibernate.version>5.2.4.Final</hibernate.version>
		<lucene.version>6.0.1</lucene.version>
		<!-- <hibernat.search.version>5.5.3.Final</hibernat.search.version> -->
		<!-- <aspectj.version>1.8.9</aspectj.version> -->
		<springframework.version>4.2.8.RELEASE</springframework.version>
		<spring.data-solr.version>2.0.2.RELEASE</spring.data-solr.version>
		<solr-solrj.version>5.5.0</solr-solrj.version>
		<!-- <spring-data-jpa.version>1.10.1.RELEASE</spring-data-jpa.version> -->
		<mybatis.version>3.4.0</mybatis.version>
		<shiro.version>1.2.5</shiro.version>
		<ehcache.version>2.10.0</ehcache.version>
		<druid-version>1.0.13</druid-version>
		<commons-lang3.version>3.3.2</commons-lang3.version>
		<commons-io.version>2.4</commons-io.version>
		<maven.tomcat.port>99</maven.tomcat.port>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>

		<!--[START] Log -->

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.21</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.7</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>1.7.21</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.21</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>1.7.21</version>
		</dependency>

		<dependency>
			<groupId>com.googlecode.log4jdbc</groupId>
			<artifactId>log4jdbc</artifactId>
			<version>1.2</version>
		</dependency>

		<!--[END] Log -->


		<!--[START] javax.cache api -->
		<dependency>
			<groupId>javax.cache</groupId>
			<artifactId>cache-api</artifactId>
			<version>1.0.0</version>
		</dependency>
		<!--[END] javax.cache api -->
		<!--[START] kaptcha 验证码组件 -->
		<dependency>
			<groupId>com.github.axet</groupId>
			<artifactId>kaptcha</artifactId>
			<version>0.0.9</version>
		</dependency>
		<!--[END] kaptcha 验证码组件 -->
		<!--[START] PostgreSQL -->
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901-1.jdbc4</version>
		</dependency>
		<!--[END] PostgreSQL -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<!-- -->
		<!-- <dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-search-orm</artifactId> <version>${hibernat.search.version}</version> </dependency> -->
		<!--[START] lucene 全文索引 -->
		<!-- SPRING DATA -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-solr</artifactId>
			<version>${spring.data-solr.version}</version>

			<exclusions>
				<exclusion>
					<artifactId>solr-solrj</artifactId>
					<groupId>org.apache.solr</groupId>
				</exclusion>
			</exclusions>

		</dependency>
		<!-- SOLR-SOLRJS -->

		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-solrj</artifactId>
			<version>${solr-solrj.version}</version>
		</dependency>

		<!-- <dependency> <groupId>org.apache.solr</groupId> <artifactId>solr-core</artifactId> <version>${solr-solrj.version}</version> </dependency> -->
		<!--[END] lucene -->
		<!--[START] aspectj 面相切面 -->
		<!-- <dependency> <groupId>org.aspectj</groupId> <artifactId>aspectjrt</artifactId> <version>${aspectj.version}</version> </dependency> -->
		<!--[END] aspectj -->
		<!--[START] spring -->
		<dependency>
			<!-- aspectj 面相切面 -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${springframework.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-orm</artifactId> <version>${springframework.version}</version> </dependency> -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<!--START Spring AMPQ -->
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit</artifactId>
			<version>1.6.5.RELEASE</version>
		</dependency>

		<!-- spring-data-jpa -->
		<!-- <dependency> <groupId>org.springframework.data</groupId> <artifactId>spring-data-jpa</artifactId> <version>${spring-data-jpa.version}</version> <exclusions> <exclusion> <artifactId>spring-orm</artifactId> <groupId>org.springframework</groupId> </exclusion> </exclusions> </dependency> -->
		<!--[END] spring -->
		<!-- <dependency> <groupId>org.codehaus.jackson</groupId> <artifactId>jackson-mapper-asl</artifactId> <version>1.9.13-atlassian-1</version> </dependency> -->
		<!--[START] freemarker模版引擎 优于jsp -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker-gae</artifactId>
			<version>2.3.25-incubating</version>
		</dependency>
		<!--[END] freemarker模版引擎 优于jsp -->

		<!--[START] mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.3.0</version>
		</dependency>
		<!--[END] mybatis -->


		<!--[START] ehcach -->
		<!-- 3.0.2 <dependency> <groupId>org.ehcache</groupId> <artifactId>ehcache</artifactId> <version>${ehcache.version}</version> </dependency> -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>${ehcache.version}</version>
		</dependency>
		<!-- <dependency> <groupId>org.ehcache</groupId> <artifactId>jcache</artifactId> <version>1.0.1</version> </dependency> -->
		<!--[END] ehcache-core -->

		<!--[START] cache-annotations-ri-spring -->
		<!-- <dependency> <groupId>org.jsr107.ri</groupId> <artifactId>cache-annotations-ri-spring</artifactId> <version>1.0.0</version> </dependency> -->
		<!--[END] cache-annotations-ri-spring -->

		<!-- <dependency> <groupId>net.sf.ehcache.internal</groupId> <artifactId>ehcache-core</artifactId> <version>${ehcache.version}</version> </dependency> <dependency> <groupId>net.sf.ehcache</groupId> <artifactId>ehcache-web</artifactId> <version>2.0.4</version> <exclusions> <exclusion> <artifactId>ehcache-core</artifactId> <groupId>net.sf.ehcache</groupId> </exclusion> </exclusions> </dependency> -->
		<!--[END] ehcache -->
		<!--[START] shiro -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>${shiro.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>ehcache-core</artifactId>
					<groupId>net.sf.ehcache</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-quartz</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<!--[END] shiro -->
		<!--[START] druid Druid是Java语言中最好的数据库连接池。Druid能够提供强大的监控和扩展功能。 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid-version}</version>
		</dependency>
		<!--[END] druid -->
		<!--[START] fileupload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		<!--[END] fileupload -->
		<!--[START] utils -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.2</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--[END] utils -->
		<!--[START] TEST TOOL -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.4</version>
			<scope>test</scope>
		</dependency>
		<!--[END] TEST TOOL -->

		<!-- [START] spring-cloud -->
		<!-- <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-config</artifactId> </dependency> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-eureka</artifactId> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-test</artifactId> <scope>test</scope> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-web</artifactId> </dependency> -->
		<!-- [END] spring-cloud -->

		<!--[START] servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>

		<!--[END] servlet -->

		<!--[START] tuckey RESTful 使用正则规则 规划url 重定向 -->
		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>urlrewritefilter</artifactId>
			<version>4.0.4</version>
		</dependency>
		<!--[END] tuckey -->

		<!--[START] tomcat -->
		<!-- <dependency> <groupId>org.apache.tomcat</groupId> <artifactId>tomcat-api</artifactId> <version>8.0.33</version> </dependency> <dependency> <groupId>org.apache.tomcat</groupId> <artifactId>tomcat-websocket</artifactId> <version>8.0.0-RC5</version> </dependency> -->
		<!-- <dependency> <groupId>org.apache.tomcat</groupId> <artifactId>tomcat-util</artifactId> <version>8.0.33</version> </dependency> -->
		<!-- //tomcat-内置所需jar -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-websocket</artifactId>
			<version>9.0.0.M4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>9.0.0.M4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<version>9.0.0.M4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-juli</artifactId>
			<version>9.0.0.M9</version>
			<scope>provided</scope>
		</dependency>

		<!--[END] tomcat -->

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20160810</version>
			<scope>test</scope>
		</dependency>

		<!-- <dependency> <groupId>joda-time</groupId> <artifactId>joda-time</artifactId> <version>2.9.4</version> <scope>pom</scope> </dependency> -->
	</dependencies>
	<!-- <dependencyManagement> <dependencies> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-dependencies</artifactId> <version>Brixton.RELEASE</version> <type>pom</type> <scope>import</scope> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-dependencies</artifactId> <version>1.4.0.RELEASE</version> <type>pom</type> <scope>import</scope> </dependency> </dependencies> </dependencyManagement> -->

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<encoding>utf-8</encoding>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<!-- http port -->
						<port>${maven.tomcat.port}</port>
						<!-- application path always starts with / -->
						<path>/${project.artifactId}</path>
						<!--上下文文件的可选路径 optional path to a context file -->
						<!-- <contextFile>${tomcatContextXml}</contextFile> -->
						<!--可选的系统性能要添加 optional system propoerties you want to add -->
						<systemProperties>
							<appserver.base>${project.build.directory}/appserver-base</appserver.base>
							<appserver.home>${project.build.directory}/appserver-home</appserver.home>
							<derby.system.home>${project.build.directory}/appserver-base/logs</derby.system.home>
							<java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
						</systemProperties>
						<!--如果你想使用测试依赖关系而不是只运行时 if you want to use test dependencies rather than only runtime -->
						<useTestClasspath>false</useTestClasspath>
						<!-- optional if you want to add some extra directories into the classloader -->
						<additionalClasspathDirs>
							<additionalClasspathDir></additionalClasspathDir>
						</additionalClasspathDirs>
					</configuration>
					<!-- For any extra dependencies needed when running embedded Tomcat (not WAR dependencies) add them below -->
					<!-- 额外的依赖关系，在运行时需要嵌入Tomcat（不是战争的依赖）添加以下 -->
					<dependencies>
						<!-- <dependency> <groupId>org.apache.derby</groupId> <artifactId>derby</artifactId> <version>\${derbyVersion}</version> </dependency> -->
						<dependency>
							<groupId>javax.mail</groupId>
							<artifactId>mail</artifactId>
							<version>1.4</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- 添加此插件以便启动jetty -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<!-- <version>6.1H.5-beta</version> //java.lang.ClassCastException: org.apache.shiro.web.servlet.ShiroHttpSession cannot be cast to org.mortbay.jetty.servlet.AbstractSessionManager$SessionIf -->
					<version>6.1.26</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<scanIntervalSeconds>10</scanIntervalSeconds>
						<stopKey>foo</stopKey>
						<!-- <stopPort>9999</stopPort> -->

						<connectors>
							<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
								<port>9999</port>
							</connector>
						</connectors>
						<!-- <scanTargetPatterns> <scanTargetPattern> <directory>src/main/webapp/WEB-INF</directory> <excludes> <exclude>**/*.jsp</exclude> </excludes> <includes> <include>**/*.properties</include> <include>**/*.xml</include> </includes> </scanTargetPattern> </scanTargetPatterns> -->
					</configuration>
					<executions>
						<execution>
							<id>start-jetty</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<scanIntervalSeconds>0</scanIntervalSeconds>
								<daemon>true</daemon>
							</configuration>
						</execution>
						<execution>
							<id>stop-jetty</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- 项目 打包使用 生成文件目录 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<descriptor>src/assembly/assembly.xml</descriptor>
						<finalName>${project.build.finalName}</finalName>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>directory</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!--mybatis generator 代码生成插件 mybatis-generator:generate -->
				<plugin>
					<groupId>org.mybatis.generator</groupId>
					<artifactId>mybatis-generator-maven-plugin</artifactId>
					<version>1.3.2</version>
					<configuration>
						<configurationFile>src/main/resources/mybatis-generator/generatorConfig.xml</configurationFile>
						<verbose>true</verbose>
						<overwrite>true</overwrite>
					</configuration>
					<executions>
						<execution>
							<id>Generate MyBatis Artifacts</id>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.mybatis.generator</groupId>
							<artifactId>mybatis-generator-core</artifactId>
							<version>1.3.2</version>
						</dependency>
					</dependencies>
				</plugin>


				<!-- <plugin> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-maven-plugin</artifactId> </plugin> -->

			</plugins>


		</pluginManagement>
	</build>
	<repositories>
		<repository>
			<id>maven-restlet</id>
			<name>Public online Restlet repository</name>
			<url>http://maven.restlet.org</url>
		</repository>
		<repository>
			<id>maven-repo2</id>
			<name>Public online Restlet repo2</name>
			<url>http://repo2.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>maven-aliyun</id>
			<name>Public online Restlet repository</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
		</repository>
		<repository>
			<id>maven-sonatype</id>
			<name>Public online Restlet repository</name>
			<url>http://repository.sonatype.org/content/groups/public/</url>
		</repository>
	</repositories>
</project>